Order to run files:

rails runner db/scripts/mblist/xlxs_to_csv.rb
ruby db/scripts/mblist/sanitize_mblist_csv.rb
rails runner db/scripts/mblist/load_mblists.rb --truncate db/scripts/mblist/output_sanitized.csv

Important! This version will truncate the table before loading. See notes below for other options.

9-25-2025 9am
wrj@Mac mrdbid % rails runner db/scripts/mblist/load_mblists.rb --truncate db/scripts/mblist/output_sanitized.csv
Loading MBList from: db/scripts/mblist/output_sanitized.csv
Truncating mb_lists...
Done. Inserted=537509, Failed=0

==============================================================================================================

Notes Below:

1. Convert XLSX to CSV
Run: rails runner db/scripts/mblist/xlxs_to_csv.rb
Output: db/scripts/mblist/short_output.csv

2. Sanitize CSV (only if you still need extra guarantees)
If you want consistent quoting/newlines and header stabilization regardless of the source, run: ruby db/scripts/mblist/sanitize_mblist_csv.rb
Output: db/scripts/mblist/short_output_sanitized.csv

Is sanitize_mblist_csv.rb still needed?
If xlxs_to_csv.rb now emits UTFâ€‘8, force_quotes, correct column count, and clean newlines, you can skip sanitizing and use short_output.csv directly.
If you ever import spreadsheets from other sources or want a belt-and-suspenders step, keep using sanitize_mblist_csv.rb to produce short_output_sanitized.csv.

To finish the import:

(Junie: The original MySQL import script did not load any rows due to LOCAL INFILE limitations. A robust Rails CSV loader was created and run successfully)
NO - MySQL bulk import (fastest, bypasses Rails validations)
NO - Ensures local_infile is enabled.
NO - Update the LOAD DATA path in db/scripts/mblist/import_mb_lists.sql to point at your actual CSV (short_output_sanitized.csv if you used the sanitizer; otherwise short_output.csv).
NO - Run the SQL script from the MySQL client.

rails runner db/scripts/mblist/load_mblists.rb --truncate db/scripts/mblist/short_output_sanitized.csv

If you prefer to append without clearing, omit --truncate:
 rails runner db/scripts/mblist/load_mblists.rb db/scripts/mblist/short_output_sanitized.csv

==============================================================================================================
Loading MBList from: db/scripts/mblist/short_output_sanitized.csv
Truncating mb_lists...
Done. Inserted=99, Failed=0

mysql> SELECT COUNT(*) FROM mb_lists;
+----------+
| COUNT(*) |
+----------+
|       99 |
+----------+
1 row in set (0.00 sec)


