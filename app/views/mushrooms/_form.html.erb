<%= form_with(model: mushroom, class: "contents") do |form| %>
  <% if mushroom.errors.any? %>
    <div id="error_explanation" class="bg-red-50 text-red-500 px-2 py-1 font-medium rounded-md mt-3">
      <h2><%= pluralize(mushroom.errors.count, "error") %> prohibited this mushroom from being saved:</h2>
      <ul class="list-disc ml-6">
        <% mushroom.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="w-full max-w-3xl mx-auto">  <!-- centers form -->

  <div class="my-5">
    <%= form.label :name %>
    <%= form.text_field :name, class: ["block shadow-sm rounded-md border px-3 py-1 mt-2 w-full", {"border-gray-400 focus:outline-blue-600": mushroom.errors[:name].none?, "border-red-400 focus:outline-red-600": mushroom.errors[:name].any?}] %>
  </div>

  <div class="my-5">
    <%= form.label :description %>
    <%= form.text_area :description, rows: 4, class: ["block shadow-sm rounded-md border px-3 py-1 mt-2 w-full", {"border-gray-400 focus:outline-blue-600": mushroom.errors[:description].none?, "border-red-400 focus:outline-red-600": mushroom.errors[:description].any?}] %>
  </div>

  <div class="my-5">
    <%= form.label :comments %>
    <%= form.text_area :comments, rows: 4, class: ["block shadow-sm rounded-md border px-3 py-1 mt-2 w-full", {"border-gray-400 focus:outline-blue-600": mushroom.errors[:comments].none?, "border-red-400 focus:outline-red-600": mushroom.errors[:comments].any?}] %>
  </div>

    <!-- Country -->
    <div class="my-5" data-controller="country-select"
         data-country-select-url-value="<%= states_path %>">
      <!-- Country Dropdown -->
      <%= form.label :country_id, "Country" %>
      <%= form.collection_select :country_id, Country.all, :id, :name,
                                 { prompt: "Please select your country" },
                                 { class: "block shadow-sm rounded-md border px-2 py-1 mt-1 w-full",
                                   data: { action: "change->country-select#change",
                                           "country-select-target": "countrySelect"} } %>

      <!-- States Dropdown -->
      <div id="state-select-container" class="mt-2">
        <select name="mushroom[state_id]"
                id="mushroom_state_id"
                class="block shadow-sm rounded-md border px-3 py-1 w-full"
                data-country-select-target="stateSelect"
                data-current="<%= mushroom.state_id %>"
                <%= mushroom.country_id.present? ? "" : "disabled" %>>
          <% if mushroom.country_id.present? %>
            <% Country.find(mushroom.country_id).states.order(:name).each do |state| %>
              <option value="<%= state.id %>" <%= "selected" if state.id == mushroom.state_id %>><%= state.name %></option>
            <% end %>
            <% else %>
              <option value="">Select a country first</option>
            <% end %>
            </select>
            </div>
            </div>



            <!-- Fungus Type -->
  <div class="my-5">
    <%= form.label :fungus_type_id, "Fungus Type" %>
    <%= form.collection_select :fungus_type_id, FungusType.all, :id, :name,
                               { prompt: "Select a Fungus Type" },
                               { class: "block shadow-sm rounded-md border px-3 py-1 mt-2 w-full" } %>
  </div>

    <!-- Candidate Genera (multiple) -->
    <div class="my-5">
      <label class="block text-sm font-medium text-gray-700">Candidate Genera</label>
      <div data-controller="tokens"
           data-tokens-url-value="<%= genera_autocomplete_path %>"
           data-tokens-min-value="3"
           data-tokens-mushroom-id-value="<%= mushroom.id %>"
           data-tokens-kind-value="genera"
           class="border rounded p-2">
        <div class="mb-2">
          <input type="text"
                 placeholder="Type at least 3 letters..."
                 class="w-full border rounded px-2 py-1"
                 data-tokens-target="input"
                 data-action="input->tokens#onInput">
          <ul class="hidden border rounded mt-1 bg-white max-h-52 overflow-auto" data-tokens-target="dropdown"></ul>
        </div>
        <div class="flex flex-wrap gap-1" data-tokens-target="list">
          <% mushroom.genera.order(:name).each do |g| %>
            <span class="inline-flex items-center bg-gray-200 rounded px-2 py-0.5 text-sm mr-1 mb-1">
              <%= g.name %>
              <%= button_to "×",
                            genus_mushroom_path(GenusMushroom.find_by(mushroom_id: mushroom.id, genus_id: g.id)),
                            method: :delete,
                            form: { data: { turbo_confirm: "Remove #{g.name}?" }, class: "inline" },
                            class: "ml-1 text-gray-600 hover:text-red-600" %>
            </span>
          <% end %>
        </div>
        <input type="hidden" data-tokens-target="hiddenIds" value="<%= mushroom.genera.pluck(:id).join(',') %>">
      </div>
      <p class="text-xs text-gray-500 mt-1">You can add multiple genera for process-of-elimination.</p>
    </div>

    <!-- Candidate Species (multiple) -->
    <div class="my-5">
      <label class="block text-sm font-medium text-gray-700">Candidate Species</label>
      <div data-controller="tokens"
           data-tokens-url-value="<%= species_autocomplete_path %>"
           data-tokens-min-value="3"
           data-tokens-mushroom-id-value="<%= mushroom.id %>"
           data-tokens-kind-value="species"
           data-tokens-genus-id-value="<%= mushroom.genera.first&.id %>"
           class="border rounded p-2">
        <div class="mb-2">
          <input type="text"
                 placeholder="Type species epithet (min 3 letters)..."
                 class="w-full border rounded px-2 py-1"
                 data-tokens-target="input"
                 data-action="input->tokens#onInput">
          <ul class="hidden border rounded mt-1 bg-white max-h-52 overflow-auto" data-tokens-target="dropdown"></ul>
        </div>
        <div class="flex flex-wrap gap-1" data-tokens-target="list">
          <% mushroom.species.includes(:genus).order("genera.name, species.name").each do |sp| %>
            <span class="inline-flex items-center bg-gray-200 rounded px-2 py-0.5 text-sm mr-1 mb-1">
              <%= [sp.genus&.name, sp.name].compact.join(" ") %>
              <%= button_to "×",
                            mushroom_species_path(MushroomSpecies.find_by(mushroom_id: mushroom.id, species_id: sp.id)),
                            method: :delete,
                            form: { data: { turbo_confirm: "Remove #{[sp.genus&.name, sp.name].compact.join(' ')}?" }, class: "inline" },
                            class: "ml-1 text-gray-600 hover:text-red-600" %>
            </span>
          <% end %>
        </div>
        <input type="hidden" data-tokens-target="hiddenIds" value="<%= mushroom.species.pluck(:id).join(',') %>">
      </div>
      <p class="text-xs text-gray-500 mt-1">Select multiple species candidates; set one as primary later if desired.</p>
    </div>

  <div class="inline">
    <%= form.submit class: "w-full sm:w-auto rounded-md px-2 py-1 bg-blue-600 hover:bg-blue-500 text-white inline-block font-medium cursor-pointer" %>
    <p class="text-red-600">This button will update the above fields.</p>
  </div>
  </div>
<% end %>
