# Production Dockerfile with optimizations
FROM ruby:3.4.3 AS builder

# Install dependencies
RUN apt-get update -qq && apt-get install -y \
  build-essential \
  libvips \
  libvips-dev \
  libmariadb-dev-compat \
  libmariadb-dev \
  default-mysql-client \
  nodejs \
  npm \
  && rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /app

# Install bundler
RUN gem install bundler:2.6.9

# Copy Gemfiles and install gems
COPY Gemfile Gemfile.lock ./
RUN bundle config set --local deployment 'true' && \
    bundle config set --local without 'development test' && \
    bundle install --jobs 4 --retry 3

# Copy package files and install JS dependencies
COPY package*.json ./
RUN if [ -f package.json ]; then npm ci --only=production; fi

# Copy the application code
COPY . .

# Precompile assets
# This requires RAILS_MASTER_KEY to be set at build time
ARG RAILS_MASTER_KEY
ENV RAILS_ENV=production \
    RAILS_MASTER_KEY=$RAILS_MASTER_KEY

RUN bundle exec rails assets:precompile

# Final production image
FROM ruby:3.4.3-slim

# Install only runtime dependencies
RUN apt-get update -qq && apt-get install -y \
  libvips \
  libmariadb3 \
  default-mysql-client \
  curl \
  && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN groupadd -r app && useradd -r -g app app

WORKDIR /app

# Copy installed gems from builder
COPY --from=builder /usr/local/bundle /usr/local/bundle

# Copy application code and precompiled assets from builder
COPY --from=builder --chown=app:app /app /app

# Create necessary directories
RUN mkdir -p tmp/pids tmp/sockets log && \
    chown -R app:app tmp log

# Switch to non-root user
USER app

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/up || exit 1

# Start server
CMD ["bin/rails", "server", "-b", "0.0.0.0"]
